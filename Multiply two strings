PROBLEM :: Multiply two strings
Given two numbers as strings s1 and s2. Calculate their Product.
Note: The numbers can be negative and You are not allowed to use any built-in function or convert the strings to integers. There can be zeros in the begining of the numbers. You don't need to specify '+' sign in the begining of positive numbers.

TIME COMPLEXITY :: O( m  * n )
SPACE COMPLEXITY :: O( m + n)


CODE :: 

class Solution {
public:
    string multiplyStrings(string& num1, string& num2) {
        // Edge case: if any number is "0"
        if (num1 == "0" || num2 == "0") return "0";

        bool isNegative = false;

        // Check for negative signs
        if (num1[0] == '-') {
            isNegative = !isNegative;
            num1 = num1.substr(1); // Remove '-'
        }
        if (num2[0] == '-') {
            isNegative = !isNegative;
            num2 = num2.substr(1); // Remove '-'
        }

        int n = num1.size();
        int m = num2.size();
        vector<int> res(n + m, 0);

        for (int i = n - 1; i >= 0; --i) {
            for (int j = m - 1; j >= 0; --j) {
                int mul = (num1[i] - '0') * (num2[j] - '0');
                int sum = mul + res[i + j + 1];

                res[i + j + 1] = sum % 10;
                res[i + j] += sum / 10;
            }
        }

        string result = "";
        for (int num : res) {
            if (!(result.empty() && num == 0)) {
                result += (num + '0');
            }
        }
        if(result.empty())return "0";
        if (isNegative) result = '-' + result;

        return result.empty() ? "0" : result;
    }
};
