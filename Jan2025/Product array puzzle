Problem :: 
Product array puzzle
Given an array, arr[] construct a product array, res[] where each element in res[i] is the product of all elements in arr[] except arr[i]. Return this resultant array, res[].
Note: Each element is res[] lies inside the 32-bit integer range.

Time Complexity :: O(N)
Sapce Complexity :: O(N)

Code :: 
class Solution {
  public:
    vector<int> productExceptSelf(vector<int>& arr) {
        vector<int>left(arr.size() , 1);
        vector<int>right(arr.size(),1);
        
        for(int i=0 ; i<arr.size() ; i++){
            if(i>0)left[i] = arr[i]*left[i-1];
            else left[i] = arr[i];
        }
         for(int i=arr.size()-1 ; i >=0 ; i--){
            if(i<arr.size()-1)right[i] = arr[i]*right[i+1];
            else right[i] = arr[i];
        }

        vector<int>ans(arr.size(),0);
        for(int i=0 ; i<arr.size() ; i++){
            if(i>0 && i<arr.size()-1)ans[i] = (left[i-1] * right[i+1]);
            else if(i==0 )ans[i] = right[i+1];
            else ans[i] = left[i-1];
        }
        return ans;
    }
};
