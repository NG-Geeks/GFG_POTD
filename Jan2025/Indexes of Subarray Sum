Problem :: Indexes of Subarray Sum
Given an array arr[] containing only non-negative integers, your task is to find a continuous subarray (a contiguous sequence of elements) whose sum equals a specified value target. 
You need to return the 1-based indices of the leftmost and rightmost elements of this subarray.
You need to find the first subarray whose sum is equal to the target.
Note: If no such array is possible then, return [-1].

Time Complexity :: O(N)
Space Complexity  :: O(1)

Code :: 
class Solution {
  public:
    vector<int> subarraySum(vector<int> &arr, int target) {
       int i=0 , j=0 ;
       int sum =0;
       while(j<arr.size()){
          sum+=arr[j];
          while(sum>target){
              sum -= arr[i];
              i++;
          }
          if(sum == target)return {i+1 , j+1};
          j++;
       }

       return {-1};
    }
};
