
Problem: Vertical sum
Given a binary tree having n nodes, find the vertical sum of the nodes that are in the same vertical line. 
Return all sums through different vertical lines starting from the left-most vertical line to the right-most vertical line.


Time Complexity : O(n)
Space Complexity : O(n)


Solution:
class Solution{
    void solve(Node * root , int k , map<int,int>&m){
        if(!root)return ;
        m[k] = m[k] + root->data;
        solve(root->left , k -1, m);
        solve(root->right , k+1, m);
    }
  public:
    vector <int> verticalSum(Node *root) {
     map<int,int>m;
     solve(root , 0 , m);
     vector<int>v;
     for(auto &i:m){
         v.push_back(i.second);
     }
     return v;
    }
};
