Problem :: 
Merge K sorted linked lists
Given an array arr[] of n sorted linked lists of different sizes. The task is to merge them in such a way that after merging they will be a single sorted linked list, then return the head of the merged linked list.

Code :: 

class Solution {
  public:
    Node* mergeKLists(vector<Node*>& arr) {
        vector<int>v;
        for(auto it:arr){
            Node * t = it;
            while(t){
                v.push_back(t->data);
                t = t->next;
            }
        }
        sort(begin(v) , end(v));
        Node * head = new Node(0);
        Node * temp = head;
        for(int i =0 ; i<v.size() ; i++){
            temp->next = new Node(v[i]);
            temp = temp->next;
        }
        return head->next;
    }
};
