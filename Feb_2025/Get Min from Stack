Problem :: Get Min from Stack
Given q queries, You task is to implement the following four functions for a stack:

push(x) – Insert an integer x onto the stack.
pop() – Remove the top element from the stack.
peek() - Return the top element from the stack. If the stack is empty, return -1.
getMin() – Retrieve the minimum element from the stack in O(1) time. If the stack is empty, return -1.
Each query can be one of the following:

1 x : Push x onto the stack.
2 : Pop the top element from the stack.
3: Return the top element from the stack. If the stack is empty, return -1.
4: Return the minimum element from the stack.

Time Complexity :: O(N)
Space Complexity :: O(N)


Code :: 

class Solution {
  public:
    Solution() {
        
    }
    stack<int> st;          // Main stack to store the elements
    stack<int> minSt;       // Auxiliary stack to store the minimums

    // Add an element to the top of Stack
    void push(int x) {
        st.push(x);
        if (minSt.empty() || x <= minSt.top()) {
            minSt.push(x);
        }
    }

    // Remove the top element from the Stack
    void pop() {
        if (!st.empty()) {
            if (st.top() == minSt.top()) {
                minSt.pop();
            }
            st.pop();
        }
    }

    // Returns top element of the Stack
    int peek() {
        if(!st.empty())
            return st.top();
        return -1;
    }

    // Finds minimum element of Stack
    int getMin() {
          if (!minSt.empty()) {
            return minSt.top();
        }
        return -1;
    }
};
