Problem :: Height of Binary Tree
Given a binary tree, find its height.

The height of a tree is defined as the number of edges on the longest path from the root to a leaf node. A leaf node is a node that does not have any children.

Time Complexity :: O(N)
Space Complexity :: O(N)

Code :: 
class Solution {
  public:
    // Function to find the height of a binary tree.
    int height(Node* node) {
        if(!node)return 0;
        queue<Node*>q;
        q.push(node);
        int cnt=0;
        while(!q.empty()){
            cnt++;
            int size = q.size();
            for(int i=0 ; i<size ; i++){
            Node * front = q.front();
            q.pop();
            if(front->left)q.push(front->left);
            if(front->right)q.push(front->right);
            }
            
        }
        return cnt-1;
    }
};
