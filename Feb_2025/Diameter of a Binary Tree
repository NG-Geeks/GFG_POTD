Problem :: Diameter of a Binary Tree
Difficulty: MediumAccuracy: 47.37%Submissions: 310K+Points: 4Average Time: 20m
Given a binary tree, the diameter (also known as the width) is defined as the number of edges on the longest path between two leaf nodes in the tree. This path may or may not pass through the root. Your task is to find the diameter of the tree.

Time Complexity :: O(N)
Space Complexity ::O(1)


Code :: 
class Solution {
     pair<int,int> solve(Node * root){
        if(root == NULL){
                pair<int,int> p =make_pair(0,0);
          return p;
        }
        pair<int ,int> left = solve(root->left);
        pair<int,int>right = solve(root ->right);
        
        int op1 = left.first;
        int op2 = right.first;
        
        int op3  = left.second+right.second +1;
        pair<int,int>ans ;
        ans.first  = max(op1,max(op2,op3));
        ans.second = max(left.second , right.second)+1;
        return ans;
    }
  public:
    int diameter(Node* root) {
          if(!root){
                 return 0;
         }
      return solve(root).first-1;
    }
};
