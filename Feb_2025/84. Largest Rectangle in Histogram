Problem :: 84. Largest Rectangle in Histogram

Given an array of integers heights representing the histogram's bar height where the width of each bar is 1, 
return the area of the largest rectangle in the histogram.

Time Complexity :: O(N)
Space Complexity :: O(N)



Code :: 
class Solution {
     vector<int> nextsmallerelement(vector<int>& heights,int n){
        stack<int>s;
        vector<int>ans(n);
        s.push(-1);
        for(int i=n-1;i>=0;i--){
        int curr=heights[i];
        while(s.top()!=-1 && heights[s.top()]>=curr){
            s.pop();
            
            }
            
            //ans is stack ka top
            ans[i]=s.top();
            s.push(i);
    }
        return ans;
    }
    vector<int> prevsmallerelement(vector<int>& heights,int n){
        stack<int>s;
        vector<int>ans(n);
        s.push(-1);
        for(int i=0;i<n;i++){
        int curr=heights[i];
        while(s.top()!=-1 && heights[s.top()]>=curr){
            s.pop();
            
            }
            
            //ans is stack ka top
            ans[i]=s.top();
            s.push(i);
    }
        return ans;
    }
  public:
    int getMaxArea(vector<int> &heights) {
         int n=heights.size();
        //get the index of all next smaller element
        vector<int>next(n);
        next= nextsmallerelement(heights,n);
        
        // get the index of all prev smaller element
        vector<int>prev(n);
        prev=prevsmallerelement(heights,n);
        
        int area=INT_MIN;
        for(int i=0;i<n;i++){
            int l=heights[i];
           
            if(next[i]==-1){
                next[i]=n;
            }
             int b=next[i]-prev[i]-1;
            int newarea=l*b;
            area=max(area,newarea);
        }
        return area;
    }
};
