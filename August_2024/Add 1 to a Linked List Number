Problem :: Add 1 to a Linked List Number
Difficulty: MediumAccuracy: 31.91%Submissions: 226K+Points: 4
You are given a linked list where each element in the list is a node and have an integer data. You need to add 1 to the number formed by concatinating all the list node numbers together and return the head of the modified linked list. 

Note: The head represents the first element of the given array.


Time Complexity :: O(N)
Space Complexity :: O(N)

Code :: 

class Solution {
    Node*  reverse(Node * head){
        Node * prev = NULL;
        Node * curr = head;
        while(curr){
            Node * next= curr->next ;
            curr->next = prev;
            prev = curr;
            curr = next;
        }
        return prev;
    }
  public:
    Node* addOne(Node* head) {
        head = reverse(head);
        Node * curr = head;
        int carry = 1;
        while(curr and carry){
            int sum = curr->data + carry;
            carry = sum/10;
            curr->data = sum%10;
            if(curr->next == NULL && carry){
                Node * t = new Node(carry);
                curr->next = t;
                break;
            }
            curr = curr->next;
            
        }
      
        return reverse(head);
    
