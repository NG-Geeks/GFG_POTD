Problem ::
N meetings in one room
Difficulty: EasyAccuracy: 45.3%Submissions: 254K+Points: 2
You are given timings of n meetings in the form of (start[i], end[i]) where start[i] is the start time of meeting i and end[i] is the finish time of meeting i. Return the maximum number of meetings that can be accommodated in a single meeting room, when only one meeting can be held in the meeting room at a particular time. 

Note: The start time of one chosen meeting can't be equal to the end time of the other chosen meeting.

Time Complexity :: O(N)
Space Complexity :: O(N)


class Solution {
     static bool cmp(pair<int,int>a, pair<int,int>b){
        return a.second<b.second;
    }
  public:
    // Function to find the maximum number of meetings that can
    // be performed in a meeting room.
    int maxMeetings(int n, int start[], int end[]) {
        vector<pair<int,int>>v;
        for(int i=0; i<n ; i++){
            v.push_back({start[i] , end[i]});
        }
        sort(v.begin() , v.end() , cmp);
        int e = v[0].second;
        int cnt= 1;
        for(int i=1 ; i<n ; i++){
            if(v[i].first>e){
                cnt++;
                e = v[i].second;
                
            }
        }
        return cnt;
    }
};
